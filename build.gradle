buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.codehaus.griffon:gradle-griffon-plugin:2.0.0'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'org.gradle.api.plugins:gradle-izpack-plugin:0.2.3'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.1.2'
        classpath 'edu.sc.seis.gradle:macappbundle:2.0.0'
        classpath 'org.kordamp.gradle:stats-gradle-plugin:0.1.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.5'
    }
}

apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'org.codehaus.griffon.griffon'

griffon {
    disableDependencyResolution = false
    includeGroovyDependencies = true
    version = '2.0.0'
    toolkit = 'javafx'
}

mainClassName = 'mst.cdtool.Launcher'

apply from: 'gradle/publishing.gradle'
apply from: 'gradle/code-coverage.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/javafx-plugin.gradle'
apply from: 'gradle/package.gradle'
apply from: 'gradle/docs.gradle'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.kordamp.gradle.stats'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.github.kt3k.coveralls'

javafx {
    mainClass = mainClassName
}

repositories {
	jcenter()
	mavenCentral()
	mavenLocal()
	maven {
		name "fileRelease"
		url "file:///usr/local/share/mvn/release"
	}
	maven {
		name "fileSnapshot"
		url "file:///usr/local/share/mvn/snapshot"
	}
	
	maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }

}

dependencies {
    compile "org.codehaus.griffon:griffon-guice:${griffon.version}"
	compile "org.prefux:prefux:0.1-SNAPSHOT"
	compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7"
	
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.1'
	compile 'commons-cli:commons-cli:1.2'
	compile 'org.codehaus.groovy:groovy-all:2.3.6'
	
//    runtime('log4j:log4j:1.2.17') {
//        exclude group: 'ant',         module: 'ant-nodeps'
//        exclude group: 'ant',         module: 'ant-junit'
//        exclude group: 'ant-contrib', module: 'ant-contrib'
//    }
//    runtime 'org.slf4j:slf4j-log4j12:1.7.7'

	testCompile "org.spockframework:spock-core:1.0-groovy-2.3-SNAPSHOT"
	testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
	testRuntime "cglib:cglib-nodep:3.1" // allows mocking of classes (in addition to interfaces)
	testRuntime "org.objenesis:objenesis:2.1" // allows mocking of classes without default constructor (together with CGLIB)
	
}

compileGroovy.enabled = true

import com.github.jengelman.gradle.plugins.shadow.transformers.*
shadowJar {
    transform(ServiceFileTransformer)
    transform(ServiceFileTransformer) {
        path = 'META-INF/griffon'
    }
    transform(PropertiesFileTransformer) {
        paths = [
            'META-INF/editors/java.beans.PropertyEditor'
        ]
    }
}
